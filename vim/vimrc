syntax on
set number
filetype plugin on
color ir_black

set encoding=utf-8
set textwidth=77
set formatoptions=croqaln
command! Emailmode set formatoptions=croqantw textwidth=70
set tabstop=2
set softtabstop=2
set shiftwidth=2
set ignorecase
set smartcase
set incsearch
set scrolloff=2
set wildmode=longest,list
set nocompatible
set autoindent
set smartindent
set mouse=a
" allow status-bar windows (0-height)
set wmh=0
" set iskeyword-=_ \" allow underscore to delimit words"

"draw tabs & trailing spaces
autocmd BufNewFile,BufRead * set list listchars=tab:â€º\  " add ,trail=- if you like

"highlight any spaces that are followed by a tab (the horror!)
" and any _single_ space that comes after ^\t+ (this is usually accedental)
" and also trailing spaces
autocmd BufNewFile,BufRead * match Error /\( \+\t\@=\)\|\(^\(\t\+\)\zs \ze[^ ]\)\|\([^ \t]\zs[ \t]\+$\)/

" tab left & right
map <A-j> gt
map <A-k> gT
" same for macvim (cmd key, because alt doesn't work
map <D-j> gt
map <D-k> gT

" I don't use man much, and i keep accidentally hitting it
map <S-k> lh

" quote character to highlight inside brackets
nmap " vib
" ctrl + b to highlight current word
map <C-b> viw
" and then keep extending it
vmap <C-b> o?\<<cr>o2/\><cr>h

" surround selection with things:
vmap ( <esc>`<i(<esc>`>la)<esc>
vmap [ <esc>`<i[<esc>`>la]<esc>
vmap { <esc>`<i{<esc>`>la}<esc>
" ) kills the surrounding characters of a selection
vmap ) <esc>`<hx`>x

" home & end
map <C-l> g$
map <C-h> g^
map <space> h
map <C-Space> g^
map <S-Space> b
" foward & back words at a time
map <S-h> b
map <S-l> w

" ctrl + backspace for deleting a word
imap <C-BS> <C-W>

" scroll (without moving cursor) on ctrl+j/k
map <C-k> <C-y>
map <C-j> <C-e>

" ctl + up/down to move lines
nmap <a-up> ddkP
nmap <a-down> ddp

" copy / paste (gvim, with the gui clipboard)
vmap <C-c> "+y
imap <C-v> <esc>"+gpi

" select all in visual mode
vmap <C-a> <esc>ggVG

" delete to the "black hole" buffer
map <S-d> "_d

" new tab with ctl+t
map <C-t> :tabnew<cr>

" map alt+slash to line comment toggle
map <A-/> ]#k
map <D-/> ]#k

" ctrl+f to FuzzyFinder (recursive)
map <C-f> :call g:FuzzyFinderMode.File.launch_base("**/", 0)<cr>
command! -narg=1 -complete=dir Find call g:FuzzyFinderMode.File.launch_base("<args>" . "/**/", 0)

" copy full path to clipboard
nmap <C-c> :silent !echo -n "%:p" \| pbcopy<cr>
