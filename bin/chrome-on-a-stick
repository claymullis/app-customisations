#!/usr/bin/env python

from optparse import OptionParser
import os, sys
import shutil
import tempfile
import urllib2
import subprocess
import re
import stat

default_path = os.path.expanduser("~/.config/chromium")

def main():
	p = OptionParser("Usage: %prog <action>")
	p.add_option('-c', '--create', action='store_const', const='create', dest='action', default='run')
	p.add_option('-r', '--run',    action='store_const', const='run',    dest='action')
	p.add_option('--profile', default=None, dest='path')
	p.add_option('-x', '--exec', default=None, help='browser executable')
	p.add_option('--dump', action='store_true', help='dump payload')
	p.add_option('--bootstrap', action='store_const', dest='action', const='bootstrap')
	opts, args = p.parse_args()
	assert len(args) == 0
	opts.path = opts.path or default_path
	import getpass
	passwd = getpass.getpass("password:")
	if __file__.endswith('.in'):
		opts.action = 'bootstrap'
	else:
		self_decrypt(opts, passwd)
	globals()[opts.action](opts, passwd)

PAYLOAD="""-----BEGIN PGP MESSAGE-----
Version: GnuPG v1.4.11 (GNU/Linux)

jA0EAwMCoL6a0Bn+a+NgyeqjhPnVZe8UoERF6dHrJ7cPKKGjhr2Mw5xEfgHIAxlw
Gve3mwnNuoAZq2njiFh+4i2IrljALChGcEZaHVCdxwWO6xYCtPpTrltCkT/6OVV9
xy9bCFyUjjV8kI93N+3fV+TfLrlvUS0wFJ0sQQU9dsttinP2CddWK7DAtVK67MqX
FW+TTtOSxNMpOi2VIVR7CMAmZBcI4xiFdycoIBXx+HkU9D6Fm7oaFJtXQKHhO17F
CXNnhhPnqrSccixdCAL/UCFe9dyd0humYNbw8VujtaXPDB/76gMVWVl3aczb+4EY
XPJSiuDKvMKTL6vuTgkooKGrPI8TDYcDYstl0j/5024GkiGdPcFLz8BMuu5vs9xs
FsJtQ/8kC7AAlT7GJ7pJGTYPqtDDK4EG9SxWd55uXdSkRBlbyaQEsPO60kuzhnqm
iBNofdyCvu/rPeRhAAgPmvSjR2hTP3jPhvOM9YhRzz8VskIs8NnjIFj2INICP1s/
BRMbPoe1cJ5BXaT1bT56gdLmTAk0WxwNt6nyVYQaA4fEHGq3JdUKz3D1XdC2k5Ro
t+E/ANUL/bvV2zZAJwXvVlD8DIouQkTUgdQk/cFz5U9EwYG7B7UL1qAySdtdwlTv
0lc2l7ictkBf4byc9NxAE7nd4NFuZAmW7F53RKn+QXUt8ark1/YQE8OVcjNFP/vD
q+aXhWS6/yVNq3Pp3V1LdVHBXBjI8Uk8Ul6lSY7h0VsKWrc8SZyRu8fasbMniQcU
H/9NETt2+i8w5jD3bWT1tBSt6xcLvnX45xmdwiItkqwl2+1iPx/9Atbdmb8tj87/
3CzrTh891rm3uEnt2gTgou4O0u2KPtFL9wgAz7/Yh5DooOaXDPDR3wIH+sK3Qo+q
MoaFGP9eoGPnp4USoEnl2i5EV0RHtU+4qtYiunoO3Qtgdbcn0v8NiMYcEJcjAQT8
nNxhJbrjpkWsPg5Qz84wIkjNN4foUYMvr4MERRlUQnnjqFsgnMZdWjXVMtpy4B8G
fYYMeMOEIqCrM8vqF5uaCYt6OAP+XxycK0D1gSzTfVCtZext0D9tUAH/zyTcGC/R
kSnCeS9A5BPmvEtutftMw8WjjwGTJKqRdQbqhfpQMwdEgF2s1MK1xOAMs4F4SF8b
M3TeAxPHwftiDq0JELjyT7tfoAa4fYH9xrXXzhWlM16BlMnwbLmJJikwDdWH9s4x
j3i7rVZWCGcZ+eLM3GU173gR/2EW2IwiWSjHxiSpF6iJ1gJNJAPxJdLeIcVE3GbE
WTdk4MyEz7fDLdbr5APXP1hVFVvjwVaz7607tqByE/UnqBUx5F8o7jTgoAf8Mwjf
uQ1K7du7pml0qDeXK+G/E1NUStxZTGj5r+N6CA7ySUlddvLPImbf41VzwMHOZEFf
kKWm/tROWLzt2l/pWBdDKEMHImWMc8MvlhzkvZsWxN03jKx+Jtjgwq5LkVvdndfn
hI05Q1HjDS21FjwizckVAr4us71IavGL8r7XGE8eIJ8rM/x+r95nFwwoBUKXvkAX
8PKbnMEoGyw=
=Hc02
-----END PGP MESSAGE-----

"""

def gpg(args, passwd, contents):
	tmp = tempfile.NamedTemporaryFile(delete=False)
	with tmp.file as f:
		f.write(contents)
	try:
		gpg = subprocess.Popen(['gpg', '--no-use-agent', '--output=-', '--passphrase-fd=0'] + args + [tmp.name], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr = subprocess.PIPE)
		out, err = gpg.communicate(passwd)
	finally:
		os.remove(tmp.name)
	assert gpg.returncode == 0, err
	return out


def self_decrypt(opts, passwd):
	out = gpg(['--no-use-agent', '--decrypt'], passwd, PAYLOAD)
	if opts.dump:
		print out
		sys.exit(0)
	else:
		out = re.sub('^#.*$', '', out)
		exec(out)

if __name__ == '__main__':
	main()
