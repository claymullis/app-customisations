#!/usr/bin/env python
import sys, os, re
import readline

class FileExists(IOError): pass

def substitute(search, replace, filename):
	return re.sub(search, replace, filename, count=1)

def move(base, old, new):
	oldloc = os.path.join(base, old)
	newloc = os.path.join(base, new)
	if os.path.exists(newloc):
		raise FileExists(newloc)
	os.rename(oldloc, newloc)
	
def main(search, replace, *paths):
	if len(paths) == 0:
		import glob
		paths = glob.glob('*')
	confirmed = False
	moved = 0
	for path in paths:
		base, filename = os.path.split(path)
		new_filename = substitute(search, replace, filename)
		if new_filename == filename:
			print "skipping identical file: %s" % (new_filename,)
			continue
		if not confirmed:
			confirmed = _confirm(filename, new_filename)
			if not confirmed:
				print "cancelling..."
				return 1
		move(base, filename, new_filename)
		moved += 1
	print "moved %s files" % (moved,)

def _confirm(old, new):
	input = raw_input("moving '%s' -> '%s'\nOK? " % (old, new))
	if input in ('','y','yes','ok'):
		return True
	return False


if __name__ =='__main__':
	if '--help' in sys.argv[1:]:
		print "Usage: %s search replace path [path ...]" % (os.path.basename(sys.argv[0]),)
		sys.exit(1)
	sys.exit(main(*sys.argv[1:]))
