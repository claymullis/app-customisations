syntax on
set number
filetype plugin on
color ir_black

set encoding=utf-8
set textwidth=0
set noswapfile
set nobackup
set nojoinspaces " just one space after a period (when joining)
set nofoldenable " I can never remember how to use folding
set autoread " reload file whenever it changes on disk
set wrapmargin=5
set nowrap
set formatoptions=crqln
set backspace=indent,eol,start

fun! FnEmailMode()
	setlocal spell mousemodel=popup
	setlocal wrap linebreak nolist wrapmargin=0
	setlocal expandtab
	match none
endfun

command! Emailmode call FnEmailMode()
set tabstop=2
set cursorline
set softtabstop=2
set shiftwidth=2
set ignorecase
set smartcase
set incsearch
set scrolloff=3
set sidescrolloff=5
set wildmode=longest,list
set nocompatible
set autoindent
set cinkeys-=#
set mouse=a
" allow status-bar windows (0-height)
set wmh=0
" set iskeyword-=_ \" allow underscore to delimit words"

" if has("gui_running")
" 	set lines=40 columns=160
" endif

"draw tabs & trailing spaces
autocmd BufNewFile,BufRead * set list listchars=tab:▸\ 
set list listchars=tab:▸\ 

"highlight any spaces that are followed by a tab (the horror!)
" and any _single_ space that comes after ^\t+ (this is usually accedental)
" and also trailing spaces
autocmd BufNewFile,BufRead * match Error /\(  \+\t\@=\)\|\(^\(\t\+\)\zs \ze[^ *]\)\|\([^ \t]\zs\s\+$\)/
                             match Error /\(  \+\t\@=\)\|\(^\(\t\+\)\zs \ze[^ *]\)\|\([^ \t]\zs\s\+$\)/

fun! Save_if_possible()
	if len(expand("%")) > 0
		:up
	else
		echo "[no file]"
	endif
endfun
autocmd FocusLost * call Save_if_possible()

augroup mkd
	autocmd BufRead *.mkd  set ai formatoptions=tcroqn2 comments=n:&gt spell mousemodel=popup textwidth=70;
augroup END


"" tab left & right
map <A-j> gt
map <A-k> gT
" same for macvim (cmd key, because alt doesn't work)
""NOTE: only run this on macvim - on gnome, it causes an ambiguous map for "<<" (unindent line)
"map <D-j> gt
"map <D-k> gT

" I don't use man much, and i keep accidentally hitting it
map <S-k> lh

" quote character to highlight inside brackets
nmap ; vib
" and keep going ...
vmap ; <esc>llvib
" ctrl + b to highlight current word
map <C-b> viw
" and then keep extending it
vmap <C-b> o?\<<cr>o2/\><cr>h
" \w should maybe do the same thing?
nmap <leader>w <c-b>
vmap <leader>w <c-b>

" surround selection with things:
vmap <leader>( <esc>`>a)<esc>`<i(<esc>
vmap <leader>[ <esc>`>a]<esc>`<i[<esc>
"vmap <leader>< <esc>`>a><esc>`<i<<esc>
vmap <leader>{ <esc>`>a}<esc>`<i{<esc>
vmap <leader>' <esc>`>a'<esc>`<i'<esc>
vmap <leader>" <esc>`>a"<esc>`<i"<esc>
vmap <leader>` <esc>`>a`<esc>`<i`<esc>
nmap <leader>' vi'
nmap <leader>" vi"
nmap <leader>[ vi[
nmap <leader>` vi`

" + expands a selection in both directions by one character
vmap + loho

" ) kills the surrounding characters of a selection
vmap <leader>) <esc>`<hx`>x

" home & end
map <C-l> $
map <C-h> ^
" nul is ctrl-space for terminal
map <nul> ^
map <space> h
map <C-Space> ^
map <S-Space> b
" foward & back words at a time
map <S-h> b
map <S-l> w

" ctrl + backspace for deleting a word
imap <C-BS> <C-W>

" ctrl + space to insert an underscore
imap <C-space> _

" ctrl-tab for completion
imap <C-tab> <c-n>
imap <C-S-tab> <c-p>

" scroll (without moving cursor) on ctrl+j/k
map <C-k> <C-y>
map <C-j> <C-e>

" alt + up/down to move lines
nmap <a-up> ddkP
nmap <a-down> ddp
" and the same for mac using the option key
"nmap <D-up> ddkP
"nmap <D-down> ddp


" I want { and } tp match whitespace-only lines, rather than just empty ones
" TODO: need to omit these from the search history
noremap { :silent ?^\s*$<cr>
noremap } :silent /^\s*$<cr>

vnoremap { ?^\s*$<cr>
vnoremap } /^\s*$<cr>

" copy / paste (gvim, with the gui clipboard)
vmap <C-c> "+y
imap <C-v> <esc>"+gpa

" select all in visual mode
vmap <C-a> <esc>ggVG

" delete to the "black hole" buffer
map <S-Y> "_d

" new tab with ctl+t
nmap <C-t> :tabnew<cr>

" map alt+slash to line comment toggle
map <A-/> :TComment<cr>
"map <D-/> :TComment<cr>

" option (or alt) + r to run the current file
"nmap <D-r> :up<cr>:!%:p<cr>
nmap <A-r> :up<cr>:!%:p<cr>

" ctrl+s to save things!
nmap <C-s> :w<cr>
imap <C-s> <esc>:w<cr>a

" Q to (re) format things
vmap Q Jgqq
" Q to (re) format things
nmap Q gqq

nmap <leader>p V{jo}ko

" ctrl+f to FuzzyFinder (recursive)
map <C-f> :call g:FuzzyFinderMode.File.launch_base("**/", 0)<cr>
command! -narg=1 -complete=dir Find call g:FuzzyFinderMode.File.launch_base("<args>" . "/**/", 0)

" leader-t for showing nerd-tree
map <leader>t :NERDTreeToggle<cr>

" copy full path to clipboard
nmap <C-c> :silent !echo -n "%:p" \| xsel -ib<cr>

nmap <A-o> :up<cr>:silent !gnome-open %:p<cr>
command! -narg=0 Open :silent :!gnome-open "`dirname "%:p"`" &
command! -narg=0 Term :silent :!gnome-terminal --working-directory="`dirname "%:p"`" &
command! -narg=0 CD :lcd %:p:h
command! -narg=0 Mdview :silent :!mdview % &
command! -narg=0 Automake autocmd BufWritePost <buffer> make
