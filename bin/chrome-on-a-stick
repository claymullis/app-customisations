#!/usr/bin/env python

from optparse import OptionParser
import os, sys
import shutil
import tempfile
import urllib2
import subprocess
import re
import stat

default_path = os.path.expanduser("~/.config/chromium")

def main():
	p = OptionParser("Usage: %prog <action>")
	p.add_option('-c', '--create', action='store_const', const='create', dest='action', default='run')
	p.add_option('-r', '--run',    action='store_const', const='run',    dest='action')
	p.add_option('--profile', default=None, dest='path')
	p.add_option('-x', '--exec', default=None, help='browser executable')
	p.add_option('--dump', action='store_true', help='dump payload')
	p.add_option('--bootstrap', action='store_const', dest='action', const='bootstrap')
	opts, args = p.parse_args()
	assert len(args) == 0
	opts.path = opts.path or default_path
	import getpass
	passwd = getpass.getpass("password:")
	if __file__.endswith('.in'):
		opts.action = 'bootstrap'
	else:
		self_decrypt(opts, passwd)
	globals()[opts.action](opts, passwd)

PAYLOAD="""-----BEGIN PGP MESSAGE-----
Version: GnuPG v1.4.11 (GNU/Linux)

jA0EAwMCQ7QJNwuU4WZgyeqTvA7QXAXn+ao9G6IdEVYdfIClBaRWHTgnQ6oR3KKN
iggZ8Yv56CWfB/vpmb9Z1ydAi8MBK6OIAuUSsq9qZzomoj6S0LkZ9Z5fL6eI6xyA
UqiFpQhKUZgEsh49JvS+4vIVRkaIqUjFhe8u7tJ6pLhbClMFxfFtlUaK9GtODZ0+
zB6afEXd4dIXNq9sjKuPGa8kp+O3AXNogeVkh292hgfMHR/tWKDS/edUZ80rTexx
izR5HJ/ipAxFL+mtiLNZwkpwcfaMRGlE5zIvbZz0XFcKzkfnAWdUoWu3q89ZhS2Y
sPh3rrAjTYQZjML+rUwDoVpbAjnWp/djquA6i0osUvXvp02VKbWimXFx9hDp5Qzk
Ycv0m7kvlcfGiJmgtrEIrPN6RUL0Iw+BAXlwVBHkA+31egNndsT6VSt0+C9Qs73M
L81zrlKNxGioUTUdFYQ5M9Y+1zaRBt7kcEnvFASEbSuxo1ADcoYn7WQ9e3Q6R0Qd
cw+aLd/GHg3Qtb7lTKR5L/SyerVf3fucRIpBhx+R8aAbQ/UQiz2EGctTU6AMjrAU
1ISztz94cNp1hy2pYcxTG3hQSro3tp1rrGw83Jl/eB/GONaiCmugCTaXUyYEEW4F
U8AGyn7ZFjHXgiS81KBLtzz/vzKWsKUGXPgCyOimjDRP09kU7Ujy3YzZF1801zI8
wFCSr/l+ILQuwvJOHhlF3bCalDhhClnUib8PyelYvDFCTmnUigyblwfFFQUWfNb9
EFn0r2OU7DFKLAfxGsHgT+/QgJgP9433xUH8p7AecKFW/X7j43LAH5uoJLPp34qH
kqkoUduTLQvYN40EHO4Q9iXovu1KC4G59UMBE2zj65v+4cqAxkf6roY++E4G8mBM
X8mdhLz9VFAHnxqvBijmCUdfA7LKLsdM7CfLM95j+CdC8+SX/pcATSIn5wqxS9VL
S5MxiEnyJ0iGcB8vtUlsbrAXosDPw+g5iEzUBJy7bBP3wVjZcalkWUVrj2vkQd41
yPr+mXuuxnq1gttA6mtrxyTR0EWwWlsrCh6ILVOHFZyAkECOnGeFguusLOBIVJMY
1ddocWVlrPUiMMbWJFaFgCYVqaoYqIA+DfjybuYfjsbwG3LWshf1USFTT+Y1i9ge
S1dQiW2+stT1AgEiphYaO67wmg01Ryfj6ZSViy/b1hp9VLiPxR+ajjRgLyt0ocXb
bLQPVdvaJNxh8u9ImpNTLrHVl/4NzJj+CrOdRcBXMhW4VhNBr3GAwMoteYi20Tcz
/yq75UjO6nviSfuZhHvngn+cUlhYK8sdAlFkxrFEcqcmuIDupg7X1lY1rybT43K1
ZjoQwPbtyltP3gmNwZnBjFKobEQg14MF7SpNmD9zHPwel+Gq1v+r6ZfX0wcJ9UYc
Uxed+SDfzx6lRQJH5FXnlsXBCG7DvqUNa2Aa+3EDXQ7ktBGsJjXjA5T+hImoB7qL
6Vj3dVDjSnEjLJLznFw7aOmlnqSzj3bz+1RicH9j3eipLbmTuvQm69N52Ufwp5US
au/q5OA+gq5JNT8hd9Z1NJAXJDaEGAQxaRZ3cJ70Z3RZZi1wfToRMR8=
=LSAG
-----END PGP MESSAGE-----

"""

def gpg(args, passwd, contents):
	tmp = tempfile.NamedTemporaryFile(delete=False)
	with tmp.file as f:
		f.write(contents)
	try:
		gpg = subprocess.Popen(['gpg', '--no-use-agent', '--output=-', '--passphrase-fd=0'] + args + [tmp.name], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr = subprocess.PIPE)
		out, err = gpg.communicate(passwd)
	finally:
		os.remove(tmp.name)
	assert gpg.returncode == 0, err
	return out


def self_decrypt(opts, passwd):
	out = gpg(['--no-use-agent', '--decrypt'], passwd, PAYLOAD)
	if opts.dump:
		print out
		sys.exit(0)
	else:
		exec(out)

if __name__ == '__main__':
	main()
