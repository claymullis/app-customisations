#!/usr/bin/env python

from optparse import OptionParser
import os, sys
import shutil
import tempfile
import urllib2
import subprocess
import re
import stat

default_path = os.path.expanduser("~/.config/chromium")

def main():
	p = OptionParser("Usage: %prog [OPTIONS]")
	p.add_option('-c', '--create', action='store_const', const='create', dest='action', default='run')
	p.add_option('-r', '--run',    action='store_const', const='run',    dest='action')
	p.add_option('--profile', default=None, dest='path')
	p.add_option('-x', '--exec', default=None, help='browser executable')
	p.add_option('--dump', action='store_true', help='dump payload')
	p.add_option('--bootstrap', action='store_const', dest='action', const='bootstrap')
	opts, args = p.parse_args()
	assert len(args) == 0
	opts.path = opts.path or default_path
	if sys.stdin.isatty():
		import getpass
		passwd = getpass.getpass("password:")
	else:
		passwd = raw_input()

	if __file__.endswith('.in'):
		opts.action = 'bootstrap'
	else:
		self_decrypt(opts, passwd)
	globals()[opts.action](opts, passwd)

PAYLOAD="""-----BEGIN PGP MESSAGE-----
Version: GnuPG v1.4.11 (GNU/Linux)

jA0EAwMC+Naf+djnNVlgyeqm9G3a6Ee0jPUwtjenHf0yKKA2XqMXO9J75jqVOgjy
hB18k00bnWlDcQm9XA4rKhHBFczAQMRpHin297nmUphLTbIs4QoHHimnUSN3KcxW
wk0OSttgAdC3+UgWLfA0XLL3SsLUQ9kyn0T6iv/VM1p9qLrDZGlQm90QQzCkgI3h
iU/6wluAGzXvJRkYiz7urTZpW+MK2C5FCfL3PaYiziAG5gsRw5i0ZRJ1OosaIkzf
i1ZDNtII1Ax0VX3HL9ILyZ1B7ecHH8qgzFshjYJzq1mU1fN1qu2qzst1XFsLgU1w
UA9fqvCOkyd2+FxggWEad4mS9Jp95Az1rNJT+d3sPcdmQzp1CGmlMIc5KYfAxU8J
IkpPFyD3KXNq8l2mqMIIYfo8ZQXckOmIiImkHyFZzT0+Dg1ERFY5mSNKAEW6d/8H
4j21VMalURms1dlhoylyAYtgmjMwMHoUR4ixEc6+0RP6ymuznaxhSqYatPEbBdpR
0+huB92hFi4Lg4jLZ2gW9lIBDR3HxPFJkdm2ROktIY3S/i5EZ2+rWevaPmToU0an
Mx03s1KR8E064KGTewqWeJaH62PdYMhVzrk0A7Tk3Kj9FbFmHtNyaSz4bfNPpAvy
hdFu3lwxur9pLvg0is6jAdfF6DcQx+1jmvT5pXAVymCCVPoo0z9bLtAZzWmAIMoZ
wAmz/oIoxiPnQGMpzvUy//AsjCaQNy2OznIsatnMsDPEmdOMWPdCQVoFGUq/R+jp
JZVIMlRMvdXOGt+zyv5ux577DmUEMNcyJaZg+ojxYh/LSBqKwxGpqfsyVFHBNsU2
ngM6763b+ZMv/229IxL9aXqLW/Hg/yrIlqbgs46Dt6MxfMWwsauhSbUmd+xYnPC7
n8K4PVc5X7KbHrQyx77ynXTsOCrXbLzdhQ4O+gQlwqxpSbf+MDDMD2F/EPA6FIk5
5tc39Urud4UMmZmx/LAl6KQgIcHYcZUQ3PRohSOlrmluHkPTkPMBofAp91MF7Dsr
EnrlIpdWeLk68JW+Tj1F3wQCA+57nQy1EpAF7MvsADPUnaZunlQabTLk1y//4QSc
x+tATQPo5JIwrXrRTJ98XryF1GCCVHQvf/tZL0mYNeYIj3/MkPx6E1P79AqYd3fS
ngGSp42JEbUagHh4D8aCIYgjDofVi/CnUmXMudh3oHz+gq3zEm4xfZQjaG2T23CW
rZ8m8jsMMp/Ow3W4MDJcC2wbjOD0AHBYhyINvaMJoEG1mA2n6I/iIn3t/OUVvbA/
uafxfwjqMFej79LGW6Pb0BnCG7DljSJ1Z5nejRaka0EKbFaalHeqkZkv6YwxrSQH
jYZXaLvSVPKzcLjV8X0/OE3clACHE7OBw95DcMTjmI45l1h0vVDs/ONTyeCfFi+i
Q9tAf30pCubHfW9lTokxnD4fHehGayDEgfYyqfioViaPjvsF6Io8wxUzyhIklXHu
QvYWGmlDGACxUZnDnofCQrehNepxWZhNDlvzP9jiiNP4wnFM24NUdqOn7jER3mhX
UR0YvRL9q6FPl9XqaT8d+xxAmLRJAEq9OGViJSeRjqjSU4F5eOr5TQQ=
=BUiQ
-----END PGP MESSAGE-----

"""

def gpg(args, passwd, contents):
	tmp = tempfile.NamedTemporaryFile(delete=False)
	with tmp.file as f:
		f.write(contents)
	try:
		gpg = subprocess.Popen(['gpg', '--no-use-agent', '--output=-', '--passphrase-fd=0'] + args + [tmp.name], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr = subprocess.PIPE)
		out, err = gpg.communicate(passwd)
	finally:
		os.remove(tmp.name)
	assert gpg.returncode == 0, err
	return out


def self_decrypt(opts, passwd):
	out = gpg(['--no-use-agent', '--decrypt'], passwd, PAYLOAD)
	if opts.dump:
		print out
		sys.exit(0)
	else:
		exec(out)

if __name__ == '__main__':
	main()
